name: dbt_run_streamline_history_adhoc
run-name: dbt_run_streamline_history_adhoc

on:
  workflow_dispatch:
    branches:
      - "main"
    inputs:
      environment:
        type: choice 
        description: DBT Run Environment
        required: true
        options:
          - dev
          - prod
          - prod_backfill
        default: dev
      warehouse:
        type: choice 
        description: Snowflake warehouse
        required: true 
        options:
          - DBT
          - DBT_CLOUD
          - DBT_EMERGENCY
        default: DBT
      dbt_command:
        type: choice
        description: DBT Run Command
        required: true
        options:
          - dbt run --vars '{"STREAMLINE_INVOKE_STREAMS":True}' -m "fsc_evm,tag:streamline_core_history" "fsc_evm,tag:streamline_core_history_receipts" "fsc_evm,tag:streamline_core_history_confirm_blocks" "fsc_evm,tag:streamline_core_complete" "fsc_evm,tag:streamline_core_complete_receipts" "fsc_evm,tag:streamline_core_complete_confirm_blocks"
          - dbt run --threads 8 --vars '{"STREAMLINE_INVOKE_STREAMS":True,"WAIT":120,"row_limit":2000000}' -m "ethereum_models,tag:streamline_decoded_logs_history" "fsc_evm,tag:streamline_decoded_logs_complete"
          - dbt run --vars '{"STREAMLINE_INVOKE_STREAMS":True}' -m "ethereum_models,tag:streamline_beacon_history" "ethereum_models,tag:streamline_beacon_complete"
          - dbt run --vars '{"STREAMLINE_INVOKE_STREAMS":True}' -m "fsc_evm,tag:streamline_balances_history" "fsc_evm,tag:streamline_balances_complete"
          - dbt run --vars '{"STREAMLINE_INVOKE_STREAMS":True}' -m "fsc_evm,tag:streamline_abis_history" "fsc_evm,tag:streamline_abis_complete"
          - dbt run --vars '{"STREAMLINE_INVOKE_STREAMS":True}' -m "fsc_evm,tag:streamline_reads_history" "fsc_evm,tag:streamline_reads_complete" "ethereum_models,tag:streamline_reads_curated"
env:
  DBT_PROFILES_DIR: ./

  ACCOUNT: "${{ vars.ACCOUNT }}"
  ROLE: "${{ vars.ROLE }}"
  USER: "${{ vars.USER }}"
  PASSWORD: "${{ secrets.PASSWORD }}"
  REGION: "${{ vars.REGION }}"
  DATABASE: "${{ vars.DATABASE }}"
  WAREHOUSE: "${{ inputs.warehouse }}"
  SCHEMA: "${{ vars.SCHEMA }}"

concurrency:
  group: ${{ github.workflow }}



jobs:
  run_dbt_jobs:
    runs-on: ubuntu-latest
    environment: 
      name: workflow_${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"
          cache: "pip"

      - name: install dependencies
        run: |
          pip install -r requirements.txt
          dbt deps
      - name: Run DBT Jobs
        run: |
          ${{ inputs.dbt_command }}