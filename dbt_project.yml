# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "ethereum_models"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "ethereum"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

models:
  ethereum_models:
    +copy_grants: true
    +persist_docs:
      relation: true
      columns: true
    +on_schema_change: "append_new_columns"
  fsc_evm:
    +enabled: true
    core_package:
      +enabled: true
      silver:
        +enabled: true
        core:
          +enabled: false
          silver__confirm_blocks:
            +enabled: true
      gold:
        +enabled: true
        core:
          +enabled: false
    
tests:
  ethereum_models:
    +store_failures: true # all tests

on-run-start:
  - "{{ create_sps() }}"
  - "{{ sp_create_load_nft_metadata() }}"
  - "{{ create_udfs() }}"

on-run-end:
  - '{{ apply_meta_as_tags(results) }}'

dispatch:
  - macro_namespace: dbt
    search_order:
      - ethereum-models
      - dbt_snowflake_query_tags
      - dbt

query-comment:
  comment: '{{ dbt_snowflake_query_tags.get_query_comment(node) }}'
  append: true # Snowflake removes prefixed comments.

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

vars:
  "dbt_date:time_zone": GMT
  STREAMLINE_INVOKE_STREAMS: False
  STREAMLINE_USE_DEV_FOR_EXTERNAL_TABLES: False
  UPDATE_UDFS_AND_SPS: False
  STREAMLINE_RUN_HISTORY: False
  UPDATE_SNOWFLAKE_TAGS: True
  WAIT: 0
  OBSERV_FULL_TEST: False
  HEAL_MODEL: False
  HEAL_MODELS: []
  LOAD_CUSTOM_FUNCTIONS: False
  START_GHA_TASKS: False

#### STREAMLINE 2.0 BEGIN ####

  API_INTEGRATION: '{{ var("config")[target.name]["API_INTEGRATION"] if var("config")[target.name] else var("config")["dev"]["API_INTEGRATION"] }}'
  EXTERNAL_FUNCTION_URI: '{{ var("config")[target.name]["EXTERNAL_FUNCTION_URI"] if var("config")[target.name] else var("config")["dev"]["EXTERNAL_FUNCTION_URI"] }}'
  ROLES: |
    ["INTERNAL_DEV"]

  config:
  # The keys correspond to dbt profiles and are case sensitive
    dev:
      API_INTEGRATION: AWS_ETHEREUM_API_STG_V2
      EXTERNAL_FUNCTION_URI: p6h6x0ncl1.execute-api.us-east-1.amazonaws.com/stg/
      ROLES:
        - AWS_LAMBDA_ETHEREUM_API
        - INTERNAL_DEV

    prod:
      API_INTEGRATION: AWS_ETHEREUM_API_PROD_V2
      EXTERNAL_FUNCTION_URI: z8x7p0tevi.execute-api.us-east-1.amazonaws.com/prod/
      ROLES:
        - AWS_LAMBDA_ETHEREUM_API
        - INTERNAL_DEV
        - DBT_CLOUD_ETHEREUM

#### STREAMLINE 2.0 END ####

#### FSC_EVM BEGIN ####

  ### GLOBAL VARIABLES BEGIN ###
  
  ## REQUIRED
  GLOBAL_PROD_DB_NAME: 'ethereum'
  GLOBAL_NODE_SECRET_PATH: 'vault/prod/ethereum/quicknode/mainnet'
  GLOBAL_BLOCKS_PER_HOUR: 300
  GLOBAL_USES_STREAMLINE_V1: True
  GLOBAL_USES_RECEIPTS_BY_HASH: False

  ### GLOBAL VARIABLES END ###

  ### CORE_PACKAGE VARIABLES BEGIN ###

  ### CORE ###
  ## OPTIONAL
  CONFIRM_BLOCKS_COMPLETE_FULL_REFRESH: True

  ### PRICES ###
  ## REQUIRED
  PRICES_SYMBOLS: 'ETH' 
  PRICES_PLATFORMS: 'Ethereum' 
  ## OPTIONAL
  # PRICES_BLOCKCHAINS: ### (defaults to 'GLOBAL_PROD_DB_NAME')
  # PRICES_TOKEN_ADDRESSES:

  ### LABELS
  ## OPTIONAL
  # LABELS_BLOCKCHAINS: ### (defaults to 'GLOBAL_PROD_DB_NAME')

  ### STATS
  ## REQUIRED
  STATS_TOKEN_ADDRESS: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' 

  ### CORE_PACKAGE VARIABLES END ###

#### FSC_EVM END ####